{
  "contractName": "PhotoNFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nftName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_nftSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "photoPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentPhotoId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nftName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nftSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentPhotoId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,string)\":{\"details\":\"mint a photoNFTtokenURI - URL include ipfs hash\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.      * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{},\"notice\":\"- This is the NFT contract for a photo\"}},\"settings\":{\"compilationTarget\":{\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/PhotoNFT.sol\":\"PhotoNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/PhotoNFT.sol\":{\"keccak256\":\"0xb972c654c431e25b3fb804353832cc12d4f96d59b184d59cddab2d5ff3254f34\",\"urls\":[\"bzz-raw://8d8348bf6e2cfd4ad244e0f08ee61a5dd0cb5c79fb5c2e5c2d4c711e3c832562\",\"dweb:/ipfs/QmQrPh82H1BfLtBVL3G6UzXwndEkX89f7FyaaUp7KnHWVo\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x86e6e1bfd33fbe81250cc677f7cea8fabd36a2f0664f6062b149fa82c53825b6\",\"urls\":[\"bzz-raw://1d0acbde0f37554dac5a3f0abc08ae237a7b7392dc65bbb143e8f87616a138e2\",\"dweb:/ipfs/QmdGhEVKWo3SAqnbxGBEwNeGTZ68mjhm2fqQEUzrR8nPgi\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xaa06e1888a639c58304620b54a742770825931f3b35e8a10b12374bc9c29726f\",\"urls\":[\"bzz-raw://231fb0c911478d5487055ac82ad0064c8c91cb3ecc0aaa2c52c462b93338ea0b\",\"dweb:/ipfs/QmUbf9hVvREGczV3epVndGCdNeDpobark2TWxW8isk8EkP\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x8198068e674696df532a9aad6ac7aee4f4aa54d9e819294876565f8de7b36337\",\"urls\":[\"bzz-raw://6f49f2e03748e3d6a93b6c9a40765c219bca18e3799a693e83b477ff9833bdf1\",\"dweb:/ipfs/QmfMr9M1jQoH2yJMuuzpU53CoMzrFyruTcUL46bERVu452\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xb0d3ace389209a3dfa9dccacba45c649efcff87f774be97e29e11aaa7e8dff39\",\"urls\":[\"bzz-raw://575812130aa852fb33cc27bd18d982b27b8c37a00dd840ff7ca9f32c325fd649\",\"dweb:/ipfs/QmWAz69yUUBNZDiVp59o5YQbQFrMPYNfc7ozzep8tPQC3J\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x50ee045e7a2b7cc2fcf6b3910a5190eae513c2a9620bc3c27e4f086a8ab03ed2\",\"urls\":[\"bzz-raw://51b448b0e95c232957156fab26084e0ac1525c63701fd3e6f57edd6f8622c89a\",\"dweb:/ipfs/QmayKbaDSmtoLVoXcqTN3vJ65CFg7WQv4vMXQPnyPYQA4e\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xd94d262660174f55414599d3787a0c44095c8442f8032f1b85e0c7bef1092fed\",\"urls\":[\"bzz-raw://34bd7a1b7e353ba90c165d14627be4a585545b4c6dea910c34b47095e74fa878\",\"dweb:/ipfs/QmbxDcqSNQi5Nr4dPwy1FixZjUBib626jhn6CXXcZPRiQd\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xffb47250da0905d4c9c1f0426afd5f5aad8f8d5d4493d609aa82b775c15688a1\",\"urls\":[\"bzz-raw://6296c3455801a8848775223f6473609eab4b30602e4189e2aaeae891db4a3329\",\"dweb:/ipfs/QmdUPhKJziFaDAc5bzcbASWUu6xEctdqDzCjvJxjoHCoQJ\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2c55bf97947320fb4415c903eb8f986aa5a0ba01d0300fc8b712fdfb5f6c8d27\",\"urls\":[\"bzz-raw://bf5cb0ae94bfc185cf882efc507aeea9a7d46c90550524a5480391ec097f1d00\",\"dweb:/ipfs/QmVFYr916prvXdLVvYwPtqmThBiHgWnqvKRD8ogrW8Mi7m\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x0067048e47929885cef6aa267313fd676f5215eecf1c242678bfc0f2c37315d5\",\"urls\":[\"bzz-raw://f421021b0e1c19dbcc73139670c545284c2f8d5a006f8014ca1ddcd32854d837\",\"dweb:/ipfs/QmRR57KKz9LyP3FkPStRFy48z1g2h3sf6592DgNF4sKEks\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf6d323bb8e770f68e33f11e97f81100e8befc135cf0f918d1516398e232eeff2\",\"urls\":[\"bzz-raw://a7b38b280049ec0f70685efe92b2f3db0cd310c8a4ba8d7f9b680c0d8fdedc08\",\"dweb:/ipfs/QmVTk4C9EGjyuPvEyuxW1PqqnmbC89bDVLd6L6gF9xKuj6\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x3729399240c8ba3671432fa9abdf8f9fe0759a5732feca025554df00e9cf9827\",\"urls\":[\"bzz-raw://63fbe9921eb58fb5bfff489a461d3f06bbf5241edec1bb3dafe62a792f3c6883\",\"dweb:/ipfs/QmT3chUrzEdXsao4fVT3zJxgJ5n5bHMiqFGWxb3S5ba619\"]},\"/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xe02e4c695163bb81a683abc6e8e3e642e8e7c4854ec6475d9f10417445ff5797\",\"urls\":[\"bzz-raw://d69f24e6963b1971276f914b51825b2311b395762c935c4ba386d92f36535d38\",\"dweb:/ipfs/QmeVB4s2NWTZuW7PxT1S9RGxbYZ5bSWU19KRLGyKnBf7N6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620018b5380380620018b58339810160408190526200003491620004cd565b83838181620000536301ffc9a760e01b6001600160e01b03620000f216565b6200006e6380ac58cd60e01b6001600160e01b03620000f216565b6200008963780e9d6360e01b6001600160e01b03620000f216565b81516200009e906009906020850190620003b5565b508051620000b490600a906020840190620003b5565b50620000d0635b5e139f60e01b6001600160e01b03620000f216565b50505050620000e685836200012f60201b60201c565b5050505050506200064e565b6001600160e01b031980821614156200010a57600080fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b600080620001456001600160e01b036200018116565b600c8054600101905590506200016584826001600160e01b03620001a616565b6200017a81846001600160e01b03620001ea16565b5092915050565b6000620001a06001600c546200022e60201b62000b681790919060201c565b90505b90565b620001bd82826200024a60201b62000b811760201c565b620001d282826001600160e01b036200031616565b620001e6816001600160e01b036200035416565b5050565b620001fe826001600160e01b036200039816565b6200020857600080fd5b6000828152600b6020908152604090912082516200022992840190620003b5565b505050565b6000828201838110156200024157600080fd5b90505b92915050565b6001600160a01b0382166200025e57600080fd5b62000272816001600160e01b036200039816565b156200027d57600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b03881690811790915584526003825290922054620002cb929091906200022e811b62000b6817901c565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000908152600160205260409020546001600160a01b0316151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003f857805160ff191683800117855562000428565b8280016001018555821562000428579182015b82811115620004285782518255916020019190600101906200040b565b50620004369291506200043a565b5090565b620001a391905b8082111562000436576000815560010162000441565b8051620002448162000629565b600082601f8301126200047657600080fd5b81516200048d6200048782620005bc565b62000595565b91508082526020830160208301858383011115620004aa57600080fd5b620004b7838284620005f6565b50505092915050565b8051620002448162000643565b600080600080600060a08688031215620004e657600080fd5b6000620004f4888862000457565b95505060208601516001600160401b038111156200051157600080fd5b6200051f8882890162000464565b94505060408601516001600160401b038111156200053c57600080fd5b6200054a8882890162000464565b93505060608601516001600160401b038111156200056757600080fd5b620005758882890162000464565b92505060806200058888828901620004c0565b9150509295509295909350565b6040518181016001600160401b0381118282101715620005b457600080fd5b604052919050565b60006001600160401b03821115620005d357600080fd5b506020601f91909101601f19160190565b60006001600160a01b03821662000244565b60005b8381101562000613578181015183820152602001620005f9565b8381111562000623576000848401525b50505050565b6200063481620005e4565b81146200064057600080fd5b50565b6200063481620001a3565b611257806200065e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063b4a5b64611610071578063b4a5b64614610230578063b88d4fde14610238578063c87b56dd1461024b578063d0def5211461025e578063e985e9c51461027157610116565b80636352211e146101ef57806370a082311461020257806395d89b4114610215578063a22cb4651461021d57610116565b806318160ddd116100e957806318160ddd1461018e57806323b872dd146101a35780632f745c59146101b657806342842e0e146101c95780634f6ccce7146101dc57610116565b806301ffc9a71461011b57806306fdde0314610144578063081812fc14610159578063095ea7b314610179575b600080fd5b61012e610129366004610fd2565b610284565b60405161013b91906110e0565b60405180910390f35b61014c6102a3565b60405161013b91906110ee565b61016c61016736600461100e565b61033a565b60405161013b919061108e565b61018c610187366004610fa2565b61036a565b005b610196610417565b60405161013b91906110ff565b61018c6101b1366004610e64565b61041d565b6101966101c4366004610fa2565b610440565b61018c6101d7366004610e64565b61048e565b6101966101ea36600461100e565b6104a9565b61016c6101fd36600461100e565b6104dd565b610196610210366004610e0c565b6104ff565b61014c610530565b61018c61022b366004610f2a565b610591565b610196610616565b61018c610246366004610eb1565b61061c565b61014c61025936600461100e565b610642565b61012e61026c366004610f5a565b6106f5565b61012e61027f366004610e2a565b610726565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b505050505090505b90565b600061034582610754565b61034e57600080fd5b506000908152600260205260409020546001600160a01b031690565b6000610375826104dd565b9050806001600160a01b0316836001600160a01b0316141561039657600080fd5b336001600160a01b03821614806103b257506103b28133610726565b6103bb57600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6104273382610771565b61043057600080fd5b61043b8383836107d0565b505050565b600061044b836104ff565b821061045657600080fd5b6001600160a01b038316600090815260056020526040902080548390811061047a57fe5b906000526020600020015490505b92915050565b61043b8383836040518060200160405280600081525061061c565b60006104b3610417565b82106104be57600080fd5b600782815481106104cb57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b03168061048857600080fd5b60006001600160a01b03821661051457600080fd5b506001600160a01b031660009081526003602052604090205490565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032f5780601f106103045761010080835404028352916020019161032f565b6001600160a01b0382163314156105a757600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061060a9085906110e0565b60405180910390a35050565b600c5481565b61062784848461041d565b610633848484846107ef565b61063c57600080fd5b50505050565b606061064d82610754565b61065657600080fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b50505050509050919050565b6000806107006108b4565b600c80546001019055905061071584826108d0565b61071f81846108f1565b5092915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b60008061077d836104dd565b9050806001600160a01b0316846001600160a01b031614806107b85750836001600160a01b03166107ad8461033a565b6001600160a01b0316145b806107c857506107c88185610726565b949350505050565b6107db838383610922565b6107e58382610a2f565b61043b8282610b24565b6000610803846001600160a01b0316610b62565b61080f575060016107c8565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906108449033908a908990899060040161109c565b602060405180830381600087803b15801561085e57600080fd5b505af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108969190810190610ff0565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600c546000906108cb90600163ffffffff610b6816565b905090565b6108da8282610b81565b6108e48282610b24565b6108ed81610c33565b5050565b6108fa82610754565b61090357600080fd5b6000828152600b60209081526040909120825161043b92840190610cc9565b826001600160a01b0316610935826104dd565b6001600160a01b03161461094857600080fd5b6001600160a01b03821661095b57600080fd5b61096481610c77565b6001600160a01b03831660009081526003602052604090205461098e90600163ffffffff610cb416565b6001600160a01b0380851660009081526003602052604080822093909355908416815220546109c490600163ffffffff610b6816565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610a5990600163ffffffff610cb416565b600083815260066020526040902054909150808214610af4576001600160a01b0384166000908152600560205260408120805484908110610a9657fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610ad457fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610b1d906000198301610d47565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b600082820183811015610b7a57600080fd5b9392505050565b6001600160a01b038216610b9457600080fd5b610b9d81610754565b15610ba757600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610be891610b68565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b031615610cb157600081815260026020526040902080546001600160a01b03191690555b50565b600082821115610cc357600080fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d0a57805160ff1916838001178555610d37565b82800160010185558215610d37579182015b82811115610d37578251825591602001919060010190610d1c565b50610d43929150610d67565b5090565b81548183558181111561043b5760008381526020902061043b9181019083015b61033791905b80821115610d435760008155600101610d6d565b8035610488816111e5565b8035610488816111f9565b803561048881611202565b805161048881611202565b600082601f830112610dbe57600080fd5b8135610dd1610dcc82611134565b61110d565b91508082526020830160208301858383011115610ded57600080fd5b610df88382846111a3565b50505092915050565b80356104888161120b565b600060208284031215610e1e57600080fd5b60006107c88484610d81565b60008060408385031215610e3d57600080fd5b6000610e498585610d81565b9250506020610e5a85828601610d81565b9150509250929050565b600080600060608486031215610e7957600080fd5b6000610e858686610d81565b9350506020610e9686828701610d81565b9250506040610ea786828701610e01565b9150509250925092565b60008060008060808587031215610ec757600080fd5b6000610ed38787610d81565b9450506020610ee487828801610d81565b9350506040610ef587828801610e01565b925050606085013567ffffffffffffffff811115610f1257600080fd5b610f1e87828801610dad565b91505092959194509250565b60008060408385031215610f3d57600080fd5b6000610f498585610d81565b9250506020610e5a85828601610d8c565b60008060408385031215610f6d57600080fd5b6000610f798585610d81565b925050602083013567ffffffffffffffff811115610f9657600080fd5b610e5a85828601610dad565b60008060408385031215610fb557600080fd5b6000610fc18585610d81565b9250506020610e5a85828601610e01565b600060208284031215610fe457600080fd5b60006107c88484610d97565b60006020828403121561100257600080fd5b60006107c88484610da2565b60006020828403121561102057600080fd5b60006107c88484610e01565b61103581611192565b82525050565b61103581611169565b61103581611174565b60006110588261115c565b6110628185611160565b93506110728185602086016111af565b61107b816111db565b9093019392505050565b61103581610337565b60208101610488828461103b565b608081016110aa828761102c565b6110b7602083018661103b565b6110c46040830185611085565b81810360608301526110d6818461104d565b9695505050505050565b602081016104888284611044565b60208082528101610b7a818461104d565b602081016104888284611085565b60405181810167ffffffffffffffff8111828210171561112c57600080fd5b604052919050565b600067ffffffffffffffff82111561114b57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b600061048882611186565b151590565b6001600160e01b03191690565b6001600160a01b031690565b600061048882600061048882611169565b82818337506000910152565b60005b838110156111ca5781810151838201526020016111b2565b8381111561063c5750506000910152565b601f01601f191690565b6111ee81611169565b8114610cb157600080fd5b6111ee81611174565b6111ee81611179565b6111ee8161033756fea365627a7a7231582075bb46b59991554a5f6be3656b6eac258012d79a9e3d7b16f9c0874efe7188876c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "",
  "sourceMap": "302:1206:0:-;;;418:356;8:9:-1;5:2;;;30:1;27;20:12;5:2;418:356:0;;;;;;;;;;;;;;;;;;;;;705:8;715:10;705:8;715:10;666:40:1;-1:-1:-1;;;;;;;;666:18:1;:40;:::i;:::-;1954::4;-1:-1:-1;;;;;;;;1954:18:4;:40;:::i;:::-;1276:51:5;-1:-1:-1;;;;;;;;1276:18:5;:51;:::i;:::-;766:12:7;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;789:16:7;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;896:49:7;-1:-1:-1;;;;;;;;896:18:7;:49;:::i;:::-;693:260;;487:157:6;;744:22:0;749:5;756:9;744:4;;;:22;;:::i;:::-;;418:356;;;;;302:1206;;1029:161:1;-1:-1:-1;;;;;;1105:25:1;;;;;1097:34;;;;;;-1:-1:-1;;;;;;1142:33:1;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1142:40:1;1178:4;1142:40;;;1029:161::o;876:262:0:-;942:4;;1010:16;-1:-1:-1;;;;;1010:14:0;:16;:::i;:::-;1037:14;:16;;;;;;992:34;-1:-1:-1;1064:21:0;1070:2;992:34;-1:-1:-1;;;;;1064:5:0;:21;:::i;:::-;1096:34;1109:10;1121:8;-1:-1:-1;;;;;1096:12:0;:34;:::i;:::-;876:262;;;;;:::o;1389:108::-;1432:16;1468:21;1487:1;1468:14;;:18;;;;;;:21;;;;:::i;:::-;1461:28;;1389:108;;:::o;3542:202:5:-;3606:24;3618:2;3622:7;3606:11;;;;;:24;;:::i;:::-;3643:40;3671:2;3675:7;-1:-1:-1;;;;;3643:27:5;:40;:::i;:::-;3696;3728:7;-1:-1:-1;;;;;3696:31:5;:40;:::i;:::-;3542:202;;:::o;1956:147:7:-;2042:16;2050:7;-1:-1:-1;;;;;2042:7:7;:16;:::i;:::-;2034:25;;;;;;2070:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;:::-;;1956:147;;:::o;1480:150:3:-;1538:7;1570:5;;;1594:6;;;;1586:15;;;;;;1621:1;-1:-1:-1;1480:150:3;;;;;:::o;8517:286:4:-;-1:-1:-1;;;;;8589:16:4;;8581:25;;;;;;8626:16;8634:7;-1:-1:-1;;;;;8626:7:4;:16;:::i;:::-;8625:17;8617:26;;;;;;8656:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8656:25:4;-1:-1:-1;;;;;8656:25:4;;;;;;;;8716:21;;:17;:21;;;;;;:28;;:21;;8656:11;8716:25;;;;;:28;;:::i;:::-;-1:-1:-1;;;;;8692:21:4;;;;;;:17;:21;;;;;;:52;;;;8762:33;;8787:7;;8692:21;8762:33;;8692:21;;8762:33;8517:286;;:::o;5035:186:5:-;-1:-1:-1;;;;;5149:16:5;;;;;;;:12;:16;;;;;;;;:23;;5120:26;;;:17;:26;;;;;:52;;;5183:16;;;39:1:-1;23:18;;45:23;;5183:30:5;;;;;;;;5035:186::o;5422:164::-;5526:10;:17;;5499:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5554:24:5;;;;;;;5422:164::o;7490:155:4:-;7547:4;7580:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7580:20:4;7618:19;;;7490:155::o;302:1206:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;302:1206:0;;;-1:-1:-1;302:1206:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:134;677:13;;695:33;677:13;695:33;;740:1106;;;;;;953:3;941:9;932:7;928:23;924:33;921:2;;;970:1;967;960:12;921:2;1005:1;1022:64;1078:7;1058:9;1022:64;;;1012:74;;984:108;1144:2;1133:9;1129:18;1123:25;-1:-1;;;;;1160:6;1157:30;1154:2;;;1200:1;1197;1190:12;1154:2;1220:74;1286:7;1277:6;1266:9;1262:22;1220:74;;;1210:84;;1102:198;1352:2;1341:9;1337:18;1331:25;-1:-1;;;;;1368:6;1365:30;1362:2;;;1408:1;1405;1398:12;1362:2;1428:74;1494:7;1485:6;1474:9;1470:22;1428:74;;;1418:84;;1310:198;1560:2;1549:9;1545:18;1539:25;-1:-1;;;;;1576:6;1573:30;1570:2;;;1616:1;1613;1606:12;1570:2;1636:74;1702:7;1693:6;1682:9;1678:22;1636:74;;;1626:84;;1518:198;1747:3;1766:64;1822:7;1813:6;1802:9;1798:22;1766:64;;;1756:74;;1726:110;915:931;;;;;;;;;1853:256;1915:2;1909:9;1941:17;;;-1:-1;;;;;2001:34;;2037:22;;;1998:62;1995:2;;;2073:1;2070;2063:12;1995:2;2089;2082:22;1893:216;;-1:-1;1893:216;2116:322;;-1:-1;;;;;2252:6;2249:30;2246:2;;;2292:1;2289;2282:12;2246:2;-1:-1;2423:4;2359;2336:17;;;;-1:-1;;2332:33;2413:15;;2183:255;2445:91;;-1:-1;;;;;2605:54;;2507:24;2588:76;2751:268;2816:1;2823:101;2837:6;2834:1;2831:13;2823:101;;;2904:11;;;2898:18;2885:11;;;2878:39;2859:2;2852:10;2823:101;;;2939:6;2936:1;2933:13;2930:2;;;3004:1;2995:6;2990:3;2986:16;2979:27;2930:2;2800:219;;;;;3027:117;3096:24;3114:5;3096:24;;;3089:5;3086:35;3076:2;;3135:1;3132;3125:12;3076:2;3070:74;;3151:117;3220:24;3238:5;3220:24;;3194:74;302:1206:0;;;;;;",
  "deployedSourceMap": "302:1206:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:1206:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:135:1;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1063:85:7;;;:::i;:::-;;;;;;;;3800:154:4;;;;;;;;;:::i;:::-;;;;;;;;3208:299;;;;;;;;;:::i;:::-;;2059:96:5;;;:::i;:::-;;;;;;;;5390:184:4;;;;;;;;;:::i;1716:185:5:-;;;;;;;;;:::i;6227:134:4:-;;;;;;;;;:::i;2500:151:5:-;;;;;;;;;:::i;2596:181:4:-;;;;;;;;;:::i;2212:153::-;;;;;;;;;:::i;1262:89:7:-;;;:::i;4254:217:4:-;;;;;;;;;:::i;376:29:0:-;;;:::i;7080:214:4:-;;;;;;;;;:::i;1557:154:7:-;;;;;;;;;:::i;876:262:0:-;;;;;;;;;:::i;4800:147:4:-;;;;;;;;;:::i;810:135:1:-;-1:-1:-1;;;;;;904:33:1;880:4;904:33;;;;;;;;;;;;;;810:135::o;1063:85:7:-;1135:5;1128:12;;;;;;;;-1:-1:-1;;1128:12:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:13;;1128:12;;1135:5;;1128:12;;1135:5;1128:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:85;;:::o;3800:154:4:-;3859:7;3887:16;3895:7;3887;:16::i;:::-;3879:25;;;;;;-1:-1:-1;3922:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;3922:24:4;;3800:154::o;3208:299::-;3272:13;3288:16;3296:7;3288;:16::i;:::-;3272:32;;3329:5;-1:-1:-1;;;;;3323:11:4;:2;-1:-1:-1;;;;;3323:11:4;;;3315:20;;;;;;3354:10;-1:-1:-1;;;;;3354:19:4;;;;:58;;;3377:35;3394:5;3401:10;3377:16;:35::i;:::-;3346:67;;;;;;3426:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3426:29:4;-1:-1:-1;;;;;3426:29:4;;;;;;;;;3471:28;;3426:24;;3471:28;;;;;;;3208:299;;;:::o;2059:96:5:-;2130:10;:17;2059:96;:::o;5390:184:4:-;5481:39;5500:10;5512:7;5481:18;:39::i;:::-;5473:48;;;;;;5534:32;5548:4;5554:2;5558:7;5534:13;:32::i;:::-;5390:184;;;:::o;1716:185:5:-;1796:7;1832:16;1842:5;1832:9;:16::i;:::-;1824:5;:24;1816:33;;;;;;-1:-1:-1;;;;;1867:19:5;;;;;;:12;:19;;;;;:26;;1887:5;;1867:26;;;;;;;;;;;;;;1860:33;;1716:185;;;;;:::o;6227:134:4:-;6314:39;6331:4;6337:2;6341:7;6314:39;;;;;;;;;;;;:16;:39::i;2500:151:5:-;2558:7;2594:13;:11;:13::i;:::-;2586:5;:21;2578:30;;;;;;2626:10;2637:5;2626:17;;;;;;;;;;;;;;;;2619:24;;2500:151;;;:::o;2596:181:4:-;2651:7;2687:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2687:20:4;2726:19;2718:28;;;;;2212:153;2267:7;-1:-1:-1;;;;;2295:19:4;;2287:28;;;;;;-1:-1:-1;;;;;;2333:24:4;;;;;:17;:24;;;;;;;2212:153::o;1262:89:7:-;1336:7;1329:14;;;;;;;;-1:-1:-1;;1329:14:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:13;;1329:14;;1336:7;;1329:14;;1336:7;1329:14;;;;;;;;;;;;;;;;;;;;;;;;4254:217:4;-1:-1:-1;;;;;4334:16:4;;4340:10;4334:16;;4326:25;;;;;;4381:10;4362:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4362:34:4;;;;;;;;;;;:45;;-1:-1:-1;;4362:45:4;;;;;;;4423:40;;4362:34;;4381:10;4423:40;;;;4362:45;;4423:40;;;;;;;;;;4254:217;;:::o;376:29:0:-;;;;:::o;7080:214:4:-;7187:31;7200:4;7206:2;7210:7;7187:12;:31::i;:::-;7237:48;7260:4;7266:2;7270:7;7279:5;7237:22;:48::i;:::-;7229:57;;;;;;7080:214;;;;:::o;1557:154:7:-;1615:13;1649:16;1657:7;1649;:16::i;:::-;1641:25;;;;;;1684:19;;;;:10;:19;;;;;;;;;1677:26;;;;;;-1:-1:-1;;1677:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:19;;1677:26;;1684:19;1677:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:154;;;:::o;876:262:0:-;942:4;992:15;1010:16;:14;:16::i;:::-;1037:14;:16;;;;;;992:34;-1:-1:-1;1064:21:0;1070:2;992:34;1064:5;:21::i;:::-;1096:34;1109:10;1121:8;1096:12;:34::i;:::-;876:262;;;;;:::o;4800:147:4:-;-1:-1:-1;;;;;4904:25:4;;;4880:4;4904:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4800:147::o;7490:155::-;7547:4;7580:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7580:20:4;7618:19;;;7490:155::o;8017:249::-;8102:4;8119:13;8135:16;8143:7;8135;:16::i;:::-;8119:32;;8181:5;-1:-1:-1;;;;;8170:16:4;:7;-1:-1:-1;;;;;8170:16:4;;:51;;;;8214:7;-1:-1:-1;;;;;8190:31:4;:20;8202:7;8190:11;:20::i;:::-;-1:-1:-1;;;;;8190:31:4;;8170:51;:87;;;;8225:32;8242:5;8249:7;8225:16;:32::i;:::-;8162:96;8017:249;-1:-1:-1;;;;8017:249:4:o;3034:245:5:-;3120:38;3140:4;3146:2;3150:7;3120:19;:38::i;:::-;3171:47;3204:4;3210:7;3171:32;:47::i;:::-;3231:40;3259:2;3263:7;3231:27;:40::i;11008:356:4:-;11130:4;11157:15;:2;-1:-1:-1;;;;;11157:13:4;;:15::i;:::-;11152:60;;-1:-1:-1;11196:4:4;11189:11;;11152:60;11240:70;;-1:-1:-1;;;11240:70:4;;11224:13;;-1:-1:-1;;;;;11240:36:4;;;;;:70;;11277:10;;11289:4;;11295:7;;11304:5;;11240:70;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11240:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11240:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11240:70:4;;;;;;;;;-1:-1:-1;;;;;;11329:26:4;-1:-1:-1;;;11329:26:4;;-1:-1:-1;;11008:356:4;;;;;;:::o;1389:108:0:-;1468:14;;1432:16;;1468:21;;1487:1;1468:21;:18;:21;:::i;:::-;1461:28;;1389:108;:::o;3542:202:5:-;3606:24;3618:2;3622:7;3606:11;:24::i;:::-;3643:40;3671:2;3675:7;3643:27;:40::i;:::-;3696;3728:7;3696:31;:40::i;:::-;3542:202;;:::o;1956:147:7:-;2042:16;2050:7;2042;:16::i;:::-;2034:25;;;;;;2070:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;10060:414:4:-;10174:4;-1:-1:-1;;;;;10154:24:4;:16;10162:7;10154;:16::i;:::-;-1:-1:-1;;;;;10154:24:4;;10146:33;;;;;;-1:-1:-1;;;;;10198:16:4;;10190:25;;;;;;10228:23;10243:7;10228:14;:23::i;:::-;-1:-1:-1;;;;;10290:23:4;;;;;;:17;:23;;;;;;:30;;10318:1;10290:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10264:23:4;;;;;;;:17;:23;;;;;;:56;;;;10355:21;;;;;;;:28;;10381:1;10355:28;:25;:28;:::i;:::-;-1:-1:-1;;;;;10331:21:4;;;;;;;:17;:21;;;;;;;;:52;;;;10396:20;;;:11;:20;;;;;:25;;-1:-1:-1;;;;;;10396:25:4;;;;;10439:27;;10408:7;;10331:21;;10439:27;;;;;;10060:414;;;:::o;6211:1148:5:-;-1:-1:-1;;;;;6502:18:5;;6477:22;6502:18;;;:12;:18;;;;;:25;:32;;6532:1;6502:32;:29;:32;:::i;:::-;6545:18;6566:26;;;:17;:26;;;;;;6477:57;;-1:-1:-1;6699:28:5;;;6695:328;;-1:-1:-1;;;;;6766:18:5;;6744:19;6766:18;;;:12;:18;;;;;:34;;6785:14;;6766:34;;;;;;;;;;;;;;6744:56;;6850:11;6817:12;:18;6830:4;-1:-1:-1;;;;;6817:18:5;-1:-1:-1;;;;;6817:18:5;;;;;;;;;;;;6836:10;6817:30;;;;;;;;;;;;;;;;;;;:44;;;;6934:30;;;:17;:30;;;;;:43;;;6695:328;-1:-1:-1;;;;;7112:18:5;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7112:27:5;;;:::i;:::-;;6211:1148;;;;:::o;5035:186::-;-1:-1:-1;;;;;5149:16:5;;;;;;;:12;:16;;;;;;;;:23;;5120:26;;;:17;:26;;;;;:52;;;5183:16;;;39:1:-1;23:18;;45:23;;5183:30:5;;;;;;;;5035:186::o;476:627:12:-;1048:20;1087:8;;;476:627::o;1480:150:3:-;1538:7;1570:5;;;1594:6;;;;1586:15;;;;;;1621:1;1480:150;-1:-1:-1;;;1480:150:3:o;8517:286:4:-;-1:-1:-1;;;;;8589:16:4;;8581:25;;;;;;8626:16;8634:7;8626;:16::i;:::-;8625:17;8617:26;;;;;;8656:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8656:25:4;-1:-1:-1;;;;;8656:25:4;;;;;;;;8716:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;8692:21:4;;;;;;:17;:21;;;;;;:52;;;;8762:33;;8787:7;;8692:21;8762:33;;8692:21;;8762:33;8517:286;;:::o;5422:164:5:-;5526:10;:17;;5499:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5554:24:5;;;;;;;5422:164::o;11531:175:4:-;11631:1;11595:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11595:24:4;:38;11591:108;;11685:1;11650:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11650:37:4;;;11591:108;11531:175;:::o;1244:150:3:-;1302:7;1335:1;1330;:6;;1322:15;;;;;;-1:-1:-1;1360:5:3;;;1244:150::o;302:1206:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;302:1206:0;;;-1:-1:-1;302:1206:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;339:20;;364:32;339:20;364:32;;408:132;485:13;;503:32;485:13;503:32;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;1447:130;1514:20;;1539:33;1514:20;1539:33;;1584:241;;1688:2;1676:9;1667:7;1663:23;1659:32;1656:2;;;1704:1;1701;1694:12;1656:2;1739:1;1756:53;1801:7;1781:9;1756:53;;1832:366;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2004:1;2021:53;2066:7;2046:9;2021:53;;;2011:63;;1983:97;2111:2;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;;;2119:63;;2090:98;1915:283;;;;;;2205:491;;;;2343:2;2331:9;2322:7;2318:23;2314:32;2311:2;;;2359:1;2356;2349:12;2311:2;2394:1;2411:53;2456:7;2436:9;2411:53;;;2401:63;;2373:97;2501:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;;;2509:63;;2480:98;2609:2;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;;;2617:63;;2588:98;2305:391;;;;;;2703:721;;;;;2867:3;2855:9;2846:7;2842:23;2838:33;2835:2;;;2884:1;2881;2874:12;2835:2;2919:1;2936:53;2981:7;2961:9;2936:53;;;2926:63;;2898:97;3026:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;;;3034:63;;3005:98;3134:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;;;3142:63;;3113:98;3270:2;3259:9;3255:18;3242:32;3294:18;3286:6;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3346:62;3400:7;3391:6;3380:9;3376:22;3346:62;;;3336:72;;3221:193;2829:595;;;;;;;;3431:360;;;3549:2;3537:9;3528:7;3524:23;3520:32;3517:2;;;3565:1;3562;3555:12;3517:2;3600:1;3617:53;3662:7;3642:9;3617:53;;;3607:63;;3579:97;3707:2;3725:50;3767:7;3758:6;3747:9;3743:22;3725:50;;3798:472;;;3929:2;3917:9;3908:7;3904:23;3900:32;3897:2;;;3945:1;3942;3935:12;3897:2;3980:1;3997:53;4042:7;4022:9;3997:53;;;3987:63;;3959:97;4115:2;4104:9;4100:18;4087:32;4139:18;4131:6;4128:30;4125:2;;;4171:1;4168;4161:12;4125:2;4191:63;4246:7;4237:6;4226:9;4222:22;4191:63;;4277:366;;;4398:2;4386:9;4377:7;4373:23;4369:32;4366:2;;;4414:1;4411;4404:12;4366:2;4449:1;4466:53;4511:7;4491:9;4466:53;;;4456:63;;4428:97;4556:2;4574:53;4619:7;4610:6;4599:9;4595:22;4574:53;;4650:239;;4753:2;4741:9;4732:7;4728:23;4724:32;4721:2;;;4769:1;4766;4759:12;4721:2;4804:1;4821:52;4865:7;4845:9;4821:52;;4896:261;;5010:2;4998:9;4989:7;4985:23;4981:32;4978:2;;;5026:1;5023;5016:12;4978:2;5061:1;5078:63;5133:7;5113:9;5078:63;;5164:241;;5268:2;5256:9;5247:7;5243:23;5239:32;5236:2;;;5284:1;5281;5274:12;5236:2;5319:1;5336:53;5381:7;5361:9;5336:53;;5412:142;5503:45;5542:5;5503:45;;;5498:3;5491:58;5485:69;;;5561:113;5644:24;5662:5;5644:24;;5681:104;5758:21;5773:5;5758:21;;5792:343;;5902:38;5934:5;5902:38;;;5952:70;6015:6;6010:3;5952:70;;;5945:77;;6027:52;6072:6;6067:3;6060:4;6053:5;6049:16;6027:52;;;6100:29;6122:6;6100:29;;;6091:39;;;;5882:253;-1:-1;;;5882:253;6496:113;6579:24;6597:5;6579:24;;6616:213;6734:2;6719:18;;6748:71;6723:9;6792:6;6748:71;;6836:647;7064:3;7049:19;;7079:79;7053:9;7131:6;7079:79;;;7169:72;7237:2;7226:9;7222:18;7213:6;7169:72;;;7252;7320:2;7309:9;7305:18;7296:6;7252:72;;;7372:9;7366:4;7362:20;7357:2;7346:9;7342:18;7335:48;7397:76;7468:4;7459:6;7397:76;;;7389:84;7035:448;-1:-1;;;;;;7035:448;7490:201;7602:2;7587:18;;7616:65;7591:9;7654:6;7616:65;;7698:301;7836:2;7850:47;;;7821:18;;7911:78;7821:18;7975:6;7911:78;;8006:213;8124:2;8109:18;;8138:71;8113:9;8182:6;8138:71;;8226:256;8288:2;8282:9;8314:17;;;8389:18;8374:34;;8410:22;;;8371:62;8368:2;;;8446:1;8443;8436:12;8368:2;8462;8455:22;8266:216;;-1:-1;8266:216;8489:321;;8632:18;8624:6;8621:30;8618:2;;;8664:1;8661;8654:12;8618:2;-1:-1;8795:4;8731;8708:17;;;;-1:-1;;8704:33;8785:15;;8555:255;9146:121;9233:12;;9204:63;9404:162;9506:19;;;9555:4;9546:14;;9499:67;9746:91;;9808:24;9826:5;9808:24;;9844:85;9910:13;9903:21;;9886:43;9936:144;-1:-1;;;;;;9997:78;;9980:100;10087:121;-1:-1;;;;;10149:54;;10132:76;10294:129;;10381:37;10412:5;10430:121;10509:37;10540:5;10509:37;;10674:145;10755:6;10750:3;10745;10732:30;-1:-1;10811:1;10793:16;;10786:27;10725:94;10828:268;10893:1;10900:101;10914:6;10911:1;10908:13;10900:101;;;10981:11;;;10975:18;10962:11;;;10955:39;10936:2;10929:10;10900:101;;;11016:6;11013:1;11010:13;11007:2;;;-1:-1;;11081:1;11063:16;;11056:27;10877:219;11104:97;11192:2;11172:14;-1:-1;;11168:28;;11152:49;11209:117;11278:24;11296:5;11278:24;;;11271:5;11268:35;11258:2;;11317:1;11314;11307:12;11333:111;11399:21;11414:5;11399:21;;11451:115;11519:23;11536:5;11519:23;;11573:117;11642:24;11660:5;11642:24;",
  "source": "pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport { ERC721Full } from \"./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\r\nimport { SafeMath } from \"./openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\n\r\n\r\n/**\r\n * @notice - This is the NFT contract for a photo\r\n */\r\ncontract PhotoNFT is ERC721Full {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public currentPhotoId;\r\n    \r\n    constructor(\r\n        address owner,  /// Initial owner (Seller)\r\n        string memory _nftName, \r\n        string memory _nftSymbol,\r\n        string memory _tokenURI,    /// [Note]: TokenURI is URL include ipfs hash\r\n        uint photoPrice\r\n    ) \r\n        public \r\n        ERC721Full(_nftName, _nftSymbol) \r\n    {\r\n        mint(owner, _tokenURI);\r\n    }\r\n\r\n    /** \r\n     * @dev mint a photoNFT\r\n     * @dev tokenURI - URL include ipfs hash\r\n     */\r\n    function mint(address to, string memory tokenURI) public returns (bool) {\r\n        /// Mint a new PhotoNFT\r\n        uint newPhotoId = getNextPhotoId();\r\n        currentPhotoId++;\r\n        _mint(to, newPhotoId);\r\n        _setTokenURI(newPhotoId, tokenURI);\r\n    }\r\n\r\n\r\n    ///--------------------------------------\r\n    /// Getter methods\r\n    ///--------------------------------------\r\n\r\n\r\n    ///--------------------------------------\r\n    /// Private methods\r\n    ///--------------------------------------\r\n    function getNextPhotoId() private returns (uint nextPhotoId) {\r\n        return currentPhotoId.add(1);\r\n    }\r\n    \r\n\r\n}\r\n",
  "sourcePath": "E:/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/PhotoNFT.sol",
  "ast": {
    "absolutePath": "/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/PhotoNFT.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        76
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:0"
      },
      {
        "absolutePath": "/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 1184,
        "src": "63:91:0",
        "symbolAliases": [
          {
            "foreign": 3,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 266,
        "src": "156:79:0",
        "symbolAliases": [
          {
            "foreign": 5,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1183,
              "src": "323:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1183",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "323:10:0"
          }
        ],
        "contractDependencies": [
          127,
          137,
          824,
          1159,
          1183,
          1310,
          1413,
          1440,
          1463
        ],
        "contractKind": "contract",
        "documentation": "@notice - This is the NFT contract for a photo",
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          1183,
          1310,
          1463,
          1159,
          1440,
          824,
          1413,
          127,
          137
        ],
        "name": "PhotoNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 265,
              "src": "347:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$265",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "341:27:0",
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 13,
            "name": "currentPhotoId",
            "nodeType": "VariableDeclaration",
            "scope": 76,
            "src": "376:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "733:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "749:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "756:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 30,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "744:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "744:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 36,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 26,
                    "name": "_nftName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "705:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 27,
                    "name": "_nftSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "715:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 25,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1183,
                  "src": "694:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1183_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "694:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "440:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "_nftName",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "492:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "name": "_nftSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "526:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "561:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "name": "photoPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "644:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:237:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:0"
            },
            "scope": 76,
            "src": "418:356:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "948:190:0",
              "statements": [
                {
                  "assignments": [
                    46
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46,
                      "name": "newPhotoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "992:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "992:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 49,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47,
                      "name": "getNextPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1010:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1037:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "currentPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1037:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1070:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1074:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        966
                      ],
                      "referencedDeclaration": 966,
                      "src": "1064:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1109:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1121:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 58,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1279,
                      "src": "1096:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1096:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:34:0"
                }
              ]
            },
            "documentation": "@dev mint a photoNFT\n@dev tokenURI - URL include ipfs hash",
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "890:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "902:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:36:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "942:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "941:6:0"
            },
            "scope": 76,
            "src": "876:262:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1450:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1487:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "currentPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1468:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 244,
                      "src": "1468:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 73,
                  "nodeType": "Return",
                  "src": "1461:28:0"
                }
              ]
            },
            "documentation": "--------------------------------------\n Getter methods\n--------------------------------------\n--------------------------------------\n Private methods\n--------------------------------------",
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextPhotoId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1412:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "nextPhotoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1432:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1431:18:0"
            },
            "scope": 76,
            "src": "1389:108:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 77,
        "src": "302:1206:0"
      }
    ],
    "src": "0:1510:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/PhotoNFT.sol",
      "exportedSymbols": {
        "PhotoNFT": [
          76
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "26:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1184,
          "absolutePath": "/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
          "file": "./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
          "scope": 77,
          "symbolAliases": [
            {
              "foreign": 3,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "63:91:0"
      },
      {
        "attributes": {
          "SourceUnit": 266,
          "absolutePath": "/E/general_work/guru/202104/nftphoto/NFT-based-photo-marketplace (2)/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "./openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 77,
          "symbolAliases": [
            {
              "foreign": 5,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 6,
        "name": "ImportDirective",
        "src": "156:79:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            127,
            137,
            824,
            1159,
            1183,
            1310,
            1413,
            1440,
            1463
          ],
          "contractKind": "contract",
          "documentation": "@notice - This is the NFT contract for a photo",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            76,
            1183,
            1310,
            1463,
            1159,
            1440,
            824,
            1413,
            127,
            137
          ],
          "name": "PhotoNFT",
          "scope": 77
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 1183,
                  "type": "contract ERC721Full"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "323:10:0"
              }
            ],
            "id": 8,
            "name": "InheritanceSpecifier",
            "src": "323:10:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 265,
                  "type": "library SafeMath"
                },
                "id": 9,
                "name": "UserDefinedTypeName",
                "src": "347:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 10,
                "name": "ElementaryTypeName",
                "src": "360:7:0"
              }
            ],
            "id": 11,
            "name": "UsingForDirective",
            "src": "341:27:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "currentPhotoId",
              "scope": 76,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 12,
                "name": "ElementaryTypeName",
                "src": "376:7:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "376:29:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 76,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 36,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "440:7:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "440:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nftName",
                      "scope": 36,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "492:6:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "492:22:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nftSymbol",
                      "scope": 36,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 18,
                        "name": "ElementaryTypeName",
                        "src": "526:6:0"
                      }
                    ],
                    "id": 19,
                    "name": "VariableDeclaration",
                    "src": "526:24:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenURI",
                      "scope": 36,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "561:6:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "561:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "photoPrice",
                      "scope": 36,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "644:4:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "644:15:0"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "429:237:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 29,
                "name": "ParameterList",
                "src": "733:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1183,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 25,
                    "name": "Identifier",
                    "src": "694:10:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 17,
                      "type": "string memory",
                      "value": "_nftName"
                    },
                    "id": 26,
                    "name": "Identifier",
                    "src": "705:8:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 19,
                      "type": "string memory",
                      "value": "_nftSymbol"
                    },
                    "id": 27,
                    "name": "Identifier",
                    "src": "715:10:0"
                  }
                ],
                "id": 28,
                "name": "ModifierInvocation",
                "src": "694:32:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 64,
                              "type": "function (address,string memory) returns (bool)",
                              "value": "mint"
                            },
                            "id": 30,
                            "name": "Identifier",
                            "src": "744:4:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 15,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "749:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "string memory",
                              "value": "_tokenURI"
                            },
                            "id": 32,
                            "name": "Identifier",
                            "src": "756:9:0"
                          }
                        ],
                        "id": 33,
                        "name": "FunctionCall",
                        "src": "744:22:0"
                      }
                    ],
                    "id": 34,
                    "name": "ExpressionStatement",
                    "src": "744:22:0"
                  }
                ],
                "id": 35,
                "name": "Block",
                "src": "733:41:0"
              }
            ],
            "id": 36,
            "name": "FunctionDefinition",
            "src": "418:356:0"
          },
          {
            "attributes": {
              "documentation": "@dev mint a photoNFT\n@dev tokenURI - URL include ipfs hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 76,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37,
                        "name": "ElementaryTypeName",
                        "src": "890:7:0"
                      }
                    ],
                    "id": 38,
                    "name": "VariableDeclaration",
                    "src": "890:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURI",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 39,
                        "name": "ElementaryTypeName",
                        "src": "902:6:0"
                      }
                    ],
                    "id": 40,
                    "name": "VariableDeclaration",
                    "src": "902:22:0"
                  }
                ],
                "id": 41,
                "name": "ParameterList",
                "src": "889:36:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 42,
                        "name": "ElementaryTypeName",
                        "src": "942:4:0"
                      }
                    ],
                    "id": 43,
                    "name": "VariableDeclaration",
                    "src": "942:4:0"
                  }
                ],
                "id": 44,
                "name": "ParameterList",
                "src": "941:6:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        46
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newPhotoId",
                          "scope": 63,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 45,
                            "name": "ElementaryTypeName",
                            "src": "992:4:0"
                          }
                        ],
                        "id": 46,
                        "name": "VariableDeclaration",
                        "src": "992:15:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 75,
                              "type": "function () returns (uint256)",
                              "value": "getNextPhotoId"
                            },
                            "id": 47,
                            "name": "Identifier",
                            "src": "1010:14:0"
                          }
                        ],
                        "id": 48,
                        "name": "FunctionCall",
                        "src": "1010:16:0"
                      }
                    ],
                    "id": 49,
                    "name": "VariableDeclarationStatement",
                    "src": "992:34:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "uint256",
                              "value": "currentPhotoId"
                            },
                            "id": 50,
                            "name": "Identifier",
                            "src": "1037:14:0"
                          }
                        ],
                        "id": 51,
                        "name": "UnaryOperation",
                        "src": "1037:16:0"
                      }
                    ],
                    "id": 52,
                    "name": "ExpressionStatement",
                    "src": "1037:16:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                966
                              ],
                              "referencedDeclaration": 966,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 53,
                            "name": "Identifier",
                            "src": "1064:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 38,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 54,
                            "name": "Identifier",
                            "src": "1070:2:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46,
                              "type": "uint256",
                              "value": "newPhotoId"
                            },
                            "id": 55,
                            "name": "Identifier",
                            "src": "1074:10:0"
                          }
                        ],
                        "id": 56,
                        "name": "FunctionCall",
                        "src": "1064:21:0"
                      }
                    ],
                    "id": 57,
                    "name": "ExpressionStatement",
                    "src": "1064:21:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1279,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 58,
                            "name": "Identifier",
                            "src": "1096:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46,
                              "type": "uint256",
                              "value": "newPhotoId"
                            },
                            "id": 59,
                            "name": "Identifier",
                            "src": "1109:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "string memory",
                              "value": "tokenURI"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "1121:8:0"
                          }
                        ],
                        "id": 61,
                        "name": "FunctionCall",
                        "src": "1096:34:0"
                      }
                    ],
                    "id": 62,
                    "name": "ExpressionStatement",
                    "src": "1096:34:0"
                  }
                ],
                "id": 63,
                "name": "Block",
                "src": "948:190:0"
              }
            ],
            "id": 64,
            "name": "FunctionDefinition",
            "src": "876:262:0"
          },
          {
            "attributes": {
              "documentation": "--------------------------------------\n Getter methods\n--------------------------------------\n--------------------------------------\n Private methods\n--------------------------------------",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getNextPhotoId",
              "scope": 76,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 65,
                "name": "ParameterList",
                "src": "1412:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "nextPhotoId",
                      "scope": 75,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 66,
                        "name": "ElementaryTypeName",
                        "src": "1432:4:0"
                      }
                    ],
                    "id": 67,
                    "name": "VariableDeclaration",
                    "src": "1432:16:0"
                  }
                ],
                "id": 68,
                "name": "ParameterList",
                "src": "1431:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 68
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 244,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "uint256",
                                  "value": "currentPhotoId"
                                },
                                "id": 69,
                                "name": "Identifier",
                                "src": "1468:14:0"
                              }
                            ],
                            "id": 70,
                            "name": "MemberAccess",
                            "src": "1468:18:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 71,
                            "name": "Literal",
                            "src": "1487:1:0"
                          }
                        ],
                        "id": 72,
                        "name": "FunctionCall",
                        "src": "1468:21:0"
                      }
                    ],
                    "id": 73,
                    "name": "Return",
                    "src": "1461:28:0"
                  }
                ],
                "id": 74,
                "name": "Block",
                "src": "1450:47:0"
              }
            ],
            "id": 75,
            "name": "FunctionDefinition",
            "src": "1389:108:0"
          }
        ],
        "id": 76,
        "name": "ContractDefinition",
        "src": "302:1206:0"
      }
    ],
    "id": 77,
    "name": "SourceUnit",
    "src": "0:1510:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-27T21:44:18.414Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,string)": {
        "details": "mint a photoNFTtokenURI - URL include ipfs hash"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.      * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "- This is the NFT contract for a photo"
  }
}